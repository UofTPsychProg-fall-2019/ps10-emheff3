stat_summary(fun.y = mean, geom = "bar",position="dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
position = position_dodge(width = 0.90), width = 0.2) +
scale_fill_brewer(palette = "Spectral") +
coord_cartesian(ylim = c(10, 12)) +
myTheme
Q3 <- ggplot(ipip,aes(x = gender, y = logMedInc, fill = exer)) +
stat_summary(fun.y = mean, geom = "bar",position="dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
position = position_dodge(width = 0.90), width = 0.2) +
scale_fill_brewer(palette = "Spectral") +
coord_cartesian(ylim = c(10, 12)) +
myTheme
Q3
ggsave('figures/Q3.pdf',units='in',width=4,height=5)
Q3 <- ggplot(ipip,aes(x = gender, y = logMedInc, fill = exer)) +
stat_summary(fun.y = mean, geom = "bar",position="dodge") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar",
position = position_dodge(width = 0.90), width = 0.2) +
scale_fill_brewer(palette = "Spectral") +
coord_cartesian(ylim = c(10, 12)) +
myTheme
Q3
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange", color="red") +
facet_wrap(vars(trait))
Q4
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange") +
facet_wrap(vars(trait))
Q4
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange") +
myTheme +
facet_wrap(vars(trait))
Q4
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait))
Q4
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
theme(strip.background = element_rect(color="black", fill="#FC4E07", size=1.5, linetype="solid"))
Q4
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
theme(strip.background = element_rect(color=element_blank(), fill=element_blank(), size=1.5, linetype="solid"))
Q4
FC4E07
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
theme(strip.background = element_rect(color=element_blank(), fill="#FC4E07", size=1.5, linetype="solid"))
Q4
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid"))
Q4
ggsave('figures/Q4.pdf',units='in',width=4,height=5)
ggsave('figures/Q4.pdf',units='in',width=8,height=5)
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
scale_fill_brewer(palette = "Spectral") +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid"))
Q4
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
scale_fill_brewer(palette = "Set1") +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid"))
Q4
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
scale_fill_brewer(palette = "Set1") +
myTheme +
facet_wrap(vars(trait)) +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid"))
Q4
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid"))
Q4
ggsave('figures/Q4.pdf',units='in',width=8,height=5)
ggsave('figures/Q4.pdf',units='in',width=10,height=5)
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid")) +
theme(axis.text.x=element_text(angle=90,hjust=1))
Q4
ggsave('figures/Q4.pdf',units='in',width=5,height=5)
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid")) +
theme(axis.text.x=element_text(angle=70,hjust=1))
Q4
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid")) +
theme(axis.text.x=element_text(angle=80,hjust=1))
Q4
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid")) +
theme(axis.text.x=element_text(angle=90,hjust=1))
Q4
myTheme = theme_bw() +
theme(panel.border = element_blank()) +
theme(axis.text.x=element_text(angle=90,hjust=1))
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip,aes(x = exer,y = BMI, colour = gender)) +
geom_boxplot(notch = TRUE) +
scale_color_brewer(palette = "Set1") + #Customization One
myTheme #Customization Two
Q1
ggsave('figures/Q1.pdf',units='in',width=5,height=5) #Customization three (to avoid x label crowding)
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip,aes(x = exer,y = BMI, colour = gender)) +
geom_boxplot(notch = TRUE) +
scale_color_brewer(palette = "Spectral") + #Customization One
myTheme #Customization Two
Q1
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip,aes(x = exer,y = BMI, colour = gender)) +
geom_boxplot(notch = TRUE) +
scale_color_brewer(palette = "Set1") + #Customization One
myTheme #Customization Two
Q1
ggsave('figures/Q1.pdf',units='in',width=5,height=5)
# create a scatter plot to visualize the relationship between income and BMI, coloring points according to gender
# use geom_smooth to add linear model fit lines, separately for males and females
Q2a <- ggplot(ipip,aes(x=logMedInc,y=BMI, color=gender))+
geom_point(size=.5,alpha=.4) +
geom_smooth(method='lm') +
myTheme
Q2a
# create a scatter plot to visualize the relationship between income and BMI, coloring points according to gender
# use geom_smooth to add linear model fit lines, separately for males and females
Q2a <- ggplot(ipip,aes(x=logMedInc,y=BMI, color=gender))+
geom_point(size=.5,alpha=.4) +
geom_smooth(method='lm') +
myTheme +
theme(axis.text.x=element_text(angle=0,hjust=1))
Q2a
# create a scatter plot to visualize the relationship between income and BMI, coloring points according to gender
# use geom_smooth to add linear model fit lines, separately for males and females
Q2a <- ggplot(ipip,aes(x=logMedInc,y=BMI, color=gender))+
geom_point(size=.5,alpha=.4) +
geom_smooth(method='lm') +
myTheme +
theme(axis.text.x=element_text(angle=0))
Q2a
# create a scatter plot to visualize the relationship between income and BMI, coloring points according to gender
# use geom_smooth to add linear model fit lines, separately for males and females
Q2a <- ggplot(ipip,aes(x=logMedInc,y=BMI, color=gender))+
geom_point(size=.5,alpha=.4) +
geom_smooth(method='lm') +
myTheme +
theme(axis.text.x=element_text(angle=0,hjust=0))
Q2a
# create a scatter plot to visualize the relationship between income and BMI, coloring points according to gender
# use geom_smooth to add linear model fit lines, separately for males and females
Q2a <- ggplot(ipip,aes(x=logMedInc,y=BMI, color=gender))+
geom_point(size=.5,alpha=.4) +
geom_smooth(method='lm') +
myTheme +
theme(axis.text.x=element_text(angle=0,hjust=0.5))
Q2a
# create a scatter plot to visualize the relationship between income and BMI, coloring points according to gender
# use geom_smooth to add linear model fit lines, separately for males and females
Q2a <- ggplot(ipip,aes(x=logMedInc,y=BMI, color=gender))+
geom_point(size=.5,alpha=.4) +
geom_smooth(method='lm') +
myTheme +
theme(axis.text.x=element_text(angle=0,hjust=0.5)) #undo x label rotation
Q2a
ggsave('figures/Q2a.pdf',units='in',width=4,height=5)
# there are some outlying lower income points, especially for females
# recreate this graph filtering for log median income>10
Q2b <- ggplot(filter(ipip,logMedInc>10),aes(x=logMedInc,y=BMI, color=gender)) +
geom_point(size=.5,alpha=.4) +
geom_smooth(method='lm') +
scale_color_brewer(palette = "Set1") +
myTheme
Q2b
# there are some outlying lower income points, especially for females
# recreate this graph filtering for log median income>10
Q2b <- ggplot(filter(ipip,logMedInc>10),aes(x=logMedInc,y=BMI, color=gender)) +
geom_point(size=.5,alpha=.4) +
geom_smooth(method='lm') +
scale_color_brewer(palette = "Set1") +
myTheme +
theme(axis.text.x=element_text(angle=0,hjust=0.5)) #undo x label rotation
Q2b
ggsave('figures/Q2b.pdf',units='in',width=4,height=5)
Q3 <- ggplot(ipip,aes(x = gender, y = logMedInc, fill = exer)) +
stat_summary(fun.y = mean, geom = "bar",position="dodge") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar",
position = position_dodge(width = 0.90), width = 0.2) +
scale_fill_brewer(palette = "Spectral") +
coord_cartesian(ylim = c(10, 12)) +
myTheme
Q3
Q3 <- ggplot(ipip,aes(x = gender, y = logMedInc, fill = exer)) +
stat_summary(fun.y = mean, geom = "bar",position="dodge") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar",
position = position_dodge(width = 0.90), width = 0.2) +
scale_fill_brewer(palette = "Spectral") +
coord_cartesian(ylim = c(10, 12)) +
myTheme +
theme(axis.text.x=element_text(angle=0,hjust=0.5)) #undo x label rotation
Q3
ggsave('figures/Q3.pdf',units='in',width=4,height=5)
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid"))
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid"))
Q4
ggsave('figures/Q4.pdf',units='in',width=5,height=5)
myTheme = theme_bw() +
theme(panel.border = element_blank()) +
theme(axis.text.x=element_text(angle=90,hjust=0.5))
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip,aes(x = exer,y = BMI, colour = gender)) +
geom_boxplot(notch = TRUE) +
scale_color_brewer(palette = "Set1") + #Customization One
myTheme #Customization Two
Q1
myTheme = theme_bw() +
theme(panel.border = element_blank()) +
theme(axis.text.x=element_text(angle=90,hjust=0))
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip,aes(x = exer,y = BMI, colour = gender)) +
geom_boxplot(notch = TRUE) +
scale_color_brewer(palette = "Set1") + #Customization One
myTheme #Customization Two
Q1
myTheme = theme_bw() +
theme(panel.border = element_blank()) +
theme(axis.text.x=element_text(angle=90,hjust=1))
# load in the data
ipip <- read_csv('ipip50_sample.csv')
# recode data in wide format
ipip <- ipip %>%
mutate(exer=factor(exer,levels=c('veryRarelyNever','less1mo','less1wk',
'1or2wk','3or5wk','more5wk')),  #orders levels of exercise appriately
BMI_cat=case_when(BMI<18.5~'underweight',
BMI>=18.5&BMI<25~'healthy',
BMI>=25&BMI<30~'overweight',
BMI>=30~'obese'), #geneartes a categorical version of BMI
BMI_cat=factor(BMI_cat, levels=c('underweight', 'healthy', 'overweight','obese'))) #orders levels of BMI_cat
levels(ipip$BMI_cat)
# generate long format
ipip.l <- ipip %>%
gather(A_1:O_10,key=item,value=value) %>%
separate(item,into=c('trait','item'),sep='_')  %>%
group_by(RID,trait) %>%
summarise(value=mean(value)) %>%  #calculates average trait values
left_join(select(ipip,RID,age,gender,BMI,BMI_cat,exer,logMedInc),.) #merges summarized traits with health and income information
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip,aes(x = exer,y = BMI, colour = gender)) +
geom_boxplot(notch = TRUE) +
scale_color_brewer(palette = "Set1") + #Customization One
myTheme #Customization Two
Q1
myTheme = theme_bw() +
theme(panel.border = element_blank()) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust = 0.5))
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip,aes(x = exer,y = BMI, colour = gender)) +
geom_boxplot(notch = TRUE) +
scale_color_brewer(palette = "Set1") + #Customization One
myTheme #Customization Two
Q1
ggsave('figures/Q1.pdf',units='in',width=5,height=5)
# create a scatter plot to visualize the relationship between income and BMI, coloring points according to gender
# use geom_smooth to add linear model fit lines, separately for males and females
Q2a <- ggplot(ipip,aes(x=logMedInc,y=BMI, color=gender))+
geom_point(size=.5,alpha=.4) +
geom_smooth(method='lm') +
myTheme +
theme(axis.text.x=element_text(angle=0,hjust=0.5)) #undo x label rotation
Q2a
ggsave('figures/Q2a.pdf',units='in',width=4,height=5)
# there are some outlying lower income points, especially for females
# recreate this graph filtering for log median income>10
Q2b <- ggplot(filter(ipip,logMedInc>10),aes(x=logMedInc,y=BMI, color=gender)) +
geom_point(size=.5,alpha=.4) +
geom_smooth(method='lm') +
scale_color_brewer(palette = "Set1") +
myTheme +
theme(axis.text.x=element_text(angle=0,hjust=0.5)) #undo x label rotation
Q2b
ggsave('figures/Q2b.pdf',units='in',width=4,height=5)
Q3 <- ggplot(ipip,aes(x = gender, y = logMedInc, fill = exer)) +
stat_summary(fun.y = mean, geom = "bar",position="dodge") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar",
position = position_dodge(width = 0.90), width = 0.2) +
scale_fill_brewer(palette = "Spectral") +
coord_cartesian(ylim = c(10, 12)) +
myTheme +
theme(axis.text.x=element_text(angle=0,hjust=0.5)) #undo x label rotation
Q3
ggsave('figures/Q3.pdf',units='in',width=4,height=5)
Q4 <- ggplot(ipip.l,aes(x=BMI_cat,y=value,color=gender)) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",position="jitter") +
myTheme +
facet_wrap(vars(trait)) +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid"))
Q4
ggsave('figures/Q4.pdf',units='in',width=5,height=5)
# use dplyr functions to calculate the mean of each personality trait for each combination of gender, BMI group
ipip.g <- ipip.l %>%
group_by(RID, trait) %>%
mutate(trait_avg = mean(score))
# use dplyr functions to calculate the mean of each personality trait for each combination of gender, BMI group
ipip.g <- ipip.l %>%
group_by(gender, BMI) %>%
mutate(trait_avg = mean(value))
View(ipip.g)
# use dplyr functions to calculate the mean of each personality trait for each combination of gender, BMI group
ipip.g <- ipip.l %>%
group_by(gender, BMI_cat) %>%
mutate(trait_avg = mean(value))
# use dplyr functions to calculate the mean of each personality trait for each combination of gender, BMI group
ipip.g <- ipip.l %>%
group_by(BMI_cat, gender) %>%
mutate(trait_avg = mean(value))
# use dplyr functions to calculate the mean of each personality trait for each combination of gender, BMI group
ipip.g <- ipip.l %>%
group_by(gender, BMI_cat) %>%
mutate(trait_avg = mean(value))
# use dplyr functions to calculate the mean of each personality trait for each combination of gender, BMI group
ipip.g <- ipip.l %>%
group_by(gender, BMI_cat, trait) %>%
mutate(trait_avg = mean(value))
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=value, colour = trait)) +
geom_point(shape=21, stroke=3, lwd=2, fill="grey") +
geom_line(alpha=.5, linetype='dotdash')
Q5
# use dplyr functions to calculate the mean of each personality trait for each combination of gender, BMI group
ipip.g <- ipip.l %>%
group_by(gender, BMI_cat, trait) %>%
summarize(trait_avg = mean(value))
# use dplyr functions to calculate the mean of each personality trait for each combination of gender, BMI group
ipip.g <- ipip.l %>%
group_by(gender, BMI_cat, trait) %>%
summarise(trait_avg = mean(value))
View(ipip.g)
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=value, colour = trait)) +
geom_point(shape=21, stroke=3, lwd=2, fill="grey") +
geom_line(alpha=.5, linetype='dotdash')
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=trait_avg, colour = trait)) +
geom_point(shape=21, stroke=3, lwd=2, fill="grey") +
geom_line(alpha=.5, linetype='dotdash')
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=trait_avg, colour = trait)) +
geom_point(shape=21, stroke=3, lwd=2, fill="grey") +
geom_line(alpha=.5, linetype='dotdash') +
facet_wrap(vars(gender))
Q5
# use dplyr functions to calculate the mean of each personality trait for each combination of gender, BMI group
ipip.g <- ipip.l %>%
group_by(gender, BMI_cat, trait) %>%
summarise(trait_avg = mean(value)) %>%
ungroup()
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=trait_avg, colour = trait)) +
geom_point(shape=21, stroke=3, lwd=2, fill="grey") +
geom_line(alpha=.5, linetype='dotdash') +
facet_wrap(vars(gender))
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=trait_avg, colour = trait, group = 1)) +
geom_point(shape=21, stroke=3, lwd=2, fill="grey") +
geom_line(alpha=.5, linetype='dotdash') +
facet_wrap(vars(gender))
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=trait_avg, colour = trait, group = 1)) +
geom_point() +
geom_line() +
facet_wrap(vars(gender))
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=trait_avg, colour = trait, group = supp)) +
geom_point() +
geom_line() +
facet_wrap(vars(gender))
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=trait_avg, colour = trait, group = BMI_cat)) +
geom_point() +
geom_line() +
facet_wrap(vars(gender))
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=trait_avg, colour = trait, group = trait)) +
geom_point() +
geom_line() +
facet_wrap(vars(gender))
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=trait_avg, colour = trait, group = trait)) +
geom_point() +
geom_line() +
facet_wrap(vars(gender)) +
myTheme +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid"))
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=trait_avg, colour = trait, group = trait)) +
geom_point() +
geom_line() +
facet_wrap(vars(gender)) +
myTheme +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid")) +
scale_color_brewer(palette = "Set1") +
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=trait_avg, colour = trait, group = trait)) +
geom_point() +
geom_line() +
facet_wrap(vars(gender)) +
myTheme +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid")) +
scale_color_brewer(palette = "Set1")
Q5
# use dplyr functions to calculate the mean of each personality trait for each combination of gender, BMI group
ipip.g <- ipip.l %>%
group_by(gender, BMI_cat, trait) %>%
summarise(value = mean(value)) %>%
ungroup()
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=trait_avg, colour = trait, group = trait)) +
geom_point() +
geom_line() +
facet_wrap(vars(gender)) +
myTheme +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid")) +
scale_color_brewer(palette = "Set1")
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ggplot(ipip.g,aes(x=BMI_cat, y=value, colour = trait, group = trait)) +
geom_point() +
geom_line() +
facet_wrap(vars(gender)) +
myTheme +
theme(strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid")) +
scale_color_brewer(palette = "Set1")
Q5
ggsave('figures/Q5.pdf',units='in',width=4,height=5)
